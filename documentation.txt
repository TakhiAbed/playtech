1.I think to my knowledge, this is the easy solution I can come up with in this given time. I used python and Django because I have some knowledge of python and thought it would be an advantage if I used python and Django. I have used git to maintain the project easily.

2.During the initial stages I had few problems I solved them one by one. I faced some problems writing the Docker and yml files but I think I have learnt from those problems

3.To run this solution:
  - first unzip the playtech.zip file.
  - cd into this directory and ls then you can see Dockerfile and yml files along with source code and documenation.txt files.
  - if you have docker pre-installed, you can run "docker build - < Dockerfile" command to build the docker image for this Dockerfile.
  - after build is done,you can check the "docker images -a" to view the build image and can find its image-id
  - then type "docker run -it -p 8000:8000 image-id" to run the docker image as container.
    [note: here the image-id is an alphanumeric string.]
  - you can test it locally on the browser by "127.0.0.1:8000" or "localhost:8000" 
  - then you can find the list of players and if you select any player from the list you can get the complete statistics of that player.
  - you can make deployment in the kubernetes using the yml file: playtech-deployment.yml
  - if you run "kubectl create -f playtech-deployment.yml" then a deployment is created in kubernetes.
  - you can check the deployments with "kubectl get deployments" commands 
  - if you to know more about the deployment you can type "kubectl describe deployment/deployment-name"
    [note: here the deployment is playtech-deploymenet]
  - then to create a kubernetes service you can run the commmand "kubectl create -f service-playtech.yml".
  - to check run "kubectl get services" or "kubectl describe service/servicename"
  - to create ingress run "kubectl run -f playtech-ingress.yml"
  - to check it run "kubectl get ing" command.

 
